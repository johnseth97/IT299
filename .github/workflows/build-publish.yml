name: 📦 Build & Push to GHCR

on:
  workflow_run:
    workflows: ["⚙️ CI & Semantic Release"]
    types:
      - completed

  workflow_dispatch:
    inputs:
      tag:
        description: "Image tag (optional, overrides latest semver tag)"
        required: false
        default: "manual"

jobs:
  build-publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download CI metadata
        if: ${{ github.event_name == 'workflow_run' }}
        uses: actions/download-artifact@v4
        with:
          name: ci-meta

      - name: Read tag
        id: tag
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.tag }}" != "" ]]; then
            TAG="${{ github.event.inputs.tag }}"
          else
            TAG=$(cat semver_tag.txt 2>/dev/null || echo "latest")
          fi

          echo "Using tag: $TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./Frontend
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/it299-frontend:${{ steps.tag.outputs.tag }}
            ghcr.io/${{ github.repository_owner }}/it299-frontend:latest
          platforms: linux/amd64,linux/arm64

      - name: Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: ./Backend
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/it299-backend:${{ steps.tag.outputs.tag }}
            ghcr.io/${{ github.repository_owner }}/it299-backend:latest
          platforms: linux/amd64,linux/arm64

      - name: Make GHCR packages public
        run: |
          gh api -X PATCH /user/packages/container/${{ github.repository_owner }}%2Fit299-frontend/visibility -f visibility=public || echo "frontend visibility already set"
          gh api -X PATCH /user/packages/container/${{ github.repository_owner }}%2Fit299-backend/visibility -f visibility=public || echo "backend visibility already set"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
